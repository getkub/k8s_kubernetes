apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-resolved.yaml convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-resolved.yaml convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/hp_network: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
        - env:
            - name: ES_JAVA_OPTS
              value: -Xms256m -Xmx256m
            - name: bootstrap.memory_lock
              value: "true"
            - name: cluster.name
              value: hive
            - name: discovery.type
              value: single-node
            - name: gateway.recover_after_nodes
              value: "1"
            - name: http.host
              value: 0.0.0.0
            - name: script.allowed_types
              value: ' inline'
            - name: thread_pool.search.queue_size
              value: "100000"
            - name: thread_pool.write.queue_size
              value: "10000"
            - name: xpack.security.enabled
              value: "false"
          image: elasticsearch:7.16.2
          name: elasticsearch
          ports:
            - containerPort: 9200
          resources: {}
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-claim0
            - mountPath: /usr/share/elasticsearch/logs
              name: elasticsearch-claim1
      restartPolicy: Always
      volumes:
        - name: elasticsearch-claim0
          persistentVolumeClaim:
            claimName: elasticsearch-claim0
        - name: elasticsearch-claim1
          persistentVolumeClaim:
            claimName: elasticsearch-claim1
status: {}
